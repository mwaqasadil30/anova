/* eslint-disable indent */
import Grid from '@material-ui/core/Grid';
import CustomBoxRedesign from 'components/CustomBoxRedesign';
import CheckboxWithLabel from 'components/forms/form-fields/CheckboxWithLabel';
import CustomTextField from 'components/forms/form-fields/CustomTextField';
import PageSubHeader from 'components/PageSubHeader';
import { Field } from 'formik';
import React from 'react';
import { useTranslation } from 'react-i18next';

interface DataChannelIntegrationParams {
  description: string;
  fieldName: string;
  shouldAutoGenerate?: boolean;
  hideAutoGenerateCheckbox?: boolean;
  hide?: boolean;
}

interface Props {
  canDomainAutoGenerateIntegrationIds?: boolean;
  dataChannels?: DataChannelIntegrationParams[];
}

const IntegrationParametersAsBoxes = ({
  canDomainAutoGenerateIntegrationIds,
  dataChannels,
}: Props) => {
  const { t } = useTranslation();

  return (
    <Grid container spacing={2}>
      {dataChannels
        ?.filter((channel) => !channel.hide)
        .map((channel) => (
          <Grid item xs={12}>
            <CustomBoxRedesign p={3}>
              <Grid container spacing={2} alignItems="center">
                <Grid item xs={12}>
                  <PageSubHeader dense>{channel.description}</PageSubHeader>
                </Grid>
                <Grid item xs={12}>
                  <Field
                    id={`${channel.fieldName}.enableIntegration-input`}
                    component={CheckboxWithLabel}
                    name={`${channel.fieldName}.enableIntegration`}
                    type="checkbox"
                    Label={{
                      label: t(
                        'ui.integrationParameters.enableIntegration',
                        'Enable Integration'
                      ),
                    }}
                  />
                </Grid>
                {canDomainAutoGenerateIntegrationIds &&
                  !channel.hideAutoGenerateCheckbox && (
                    <Grid item xs={12}>
                      <Field
                        id={`${channel.fieldName}.shouldAutoGenerate-input`}
                        component={CheckboxWithLabel}
                        name={`${channel.fieldName}.shouldAutoGenerate`}
                        type="checkbox"
                        Label={{
                          label: t(
                            'ui.integrationParameters.autoGenerateDataChannelIntegrationId',
                            'Auto-Generate Integration ID'
                          ),
                        }}
                      />
                    </Grid>
                  )}
                <Grid item xs={12}>
                  <Field
                    id={`${channel.fieldName}.integrationId-input`}
                    component={CustomTextField}
                    name={`${channel.fieldName}.integrationId`}
                    disabled={channel.shouldAutoGenerate}
                    placeholder={t(
                      'ui.integrationParameters.integrationId.placeholder',
                      'Enter Integration ID...'
                    )}
                  />
                </Grid>
              </Grid>
            </CustomBoxRedesign>
          </Grid>
        ))}
    </Grid>
  );
};

export default IntegrationParametersAsBoxes;
