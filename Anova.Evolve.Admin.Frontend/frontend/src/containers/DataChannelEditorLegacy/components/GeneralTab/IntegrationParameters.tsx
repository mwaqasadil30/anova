/* eslint-disable indent, react/jsx-indent */
import MenuItem from '@material-ui/core/MenuItem';
import TableCell from '@material-ui/core/TableCell';
import TableRow from '@material-ui/core/TableRow';
import { FtpDomainInfo } from 'api/admin/api';
import CheckboxWithLabel from 'components/forms/form-fields/CheckboxWithLabel';
import CustomTextField from 'components/forms/form-fields/CustomTextField';
import SelectItem from 'components/forms/styled-fields/SelectItem';
import Table from 'components/tables/components/Table';
import TableBody from 'components/tables/components/TableBody';
import TableContainer from 'components/tables/components/TableContainer';
import TableHead from 'components/tables/components/TableHead';
import TableHeadCell from 'components/tables/components/TableHeadCell';
import { Field, getIn } from 'formik';
import React from 'react';
import { useTranslation } from 'react-i18next';
import styled from 'styled-components';

const StyledTable = styled(Table)`
  min-width: 850px;
`;

const StyledTableHeadCell = styled(TableHeadCell)`
  padding: 7px 16px;
`;

interface IntegrationProfile {
  enableIntegrationFieldName: string;
  integrationDomainIdFieldName: string;
  autoGenerateIntegrationIdFieldName: string;
  integrationIdFieldName: string;
}

interface Props {
  values: any;
  profiles: IntegrationProfile[];
  domains?: FtpDomainInfo[] | null;
}

const IntegrationParameters = ({ domains, profiles, values }: Props) => {
  const { t } = useTranslation();

  return (
    <TableContainer>
      <StyledTable aria-label="integration parameters table">
        <TableHead>
          <TableRow>
            <StyledTableHeadCell>
              {t('ui.main.profile', 'Profile')}
            </StyledTableHeadCell>
            <StyledTableHeadCell>
              {t(
                'ui.integrationParameters.enableIntegration',
                'Enable Integration'
              )}
            </StyledTableHeadCell>
            <StyledTableHeadCell>
              {t('ui.common.domain', 'Domain')}
            </StyledTableHeadCell>
            <StyledTableHeadCell>
              {t(
                'ui.integrationParameters.autoGenerateDataChannelIntegrationId',
                'Auto-Generate Integration ID'
              )}
            </StyledTableHeadCell>
            <StyledTableHeadCell>
              {t(
                'ui.integrationParameters.dataChannelIntegrationId',
                'Data Channel Integration ID'
              )}
            </StyledTableHeadCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {profiles.map((profile, index) => {
            const shouldAutoGenerate = getIn(
              values,
              profile.autoGenerateIntegrationIdFieldName
            );
            const selectedDomainId = getIn(
              values,
              profile.integrationDomainIdFieldName
            );
            const selectedDomain = domains?.find(
              (domain) => domain.targetDomainId === selectedDomainId
            );
            const canDomainAutoGenerateIntegrationIds =
              selectedDomain?.autoGenerateFtpId;

            return (
              <TableRow
                key={profile.integrationIdFieldName}
                style={{ height: 50 }}
              >
                <TableCell
                  aria-label="Data channel type"
                  style={{
                    padding: '5px 24px 5px 16px',
                  }}
                >
                  {t(
                    'ui.datachannel.integrationNumber',
                    'Integration {{integrationNumber}}',
                    { integrationNumber: index + 1 }
                  )}
                </TableCell>
                <TableCell
                  aria-label="Enable integration"
                  style={{
                    padding: 0,
                    textAlign: 'center',
                  }}
                >
                  <Field
                    id={`${profile.enableIntegrationFieldName}-input`}
                    name={profile.enableIntegrationFieldName}
                    component={CheckboxWithLabel}
                    type="checkbox"
                    Label={{
                      style: {
                        display: 'block',
                        margin: 0,
                      },
                    }}
                  />
                </TableCell>
                <TableCell
                  aria-label="Integration 1 domain"
                  style={{ width: 300 }}
                >
                  <Field
                    id={`${profile.integrationDomainIdFieldName}-input`}
                    name={profile.integrationDomainIdFieldName}
                    component={CustomTextField}
                    select
                    SelectProps={{ displayEmpty: true }}
                  >
                    <MenuItem value="" disabled>
                      <SelectItem />
                    </MenuItem>
                    {domains?.map((domain) => (
                      <MenuItem
                        key={domain.targetDomainId}
                        value={domain.targetDomainId}
                      >
                        {domain.targetDomainName}
                      </MenuItem>
                    ))}
                  </Field>
                </TableCell>
                <TableCell
                  aria-label="Auto-Generate Data Channel Integration ID"
                  style={{
                    padding: 0,
                    textAlign: 'center',
                  }}
                >
                  {canDomainAutoGenerateIntegrationIds && (
                    <Field
                      id={`${profile.autoGenerateIntegrationIdFieldName}-input`}
                      name={profile.autoGenerateIntegrationIdFieldName}
                      component={CheckboxWithLabel}
                      type="checkbox"
                      Label={{
                        style: {
                          display: 'block',
                          margin: 0,
                        },
                      }}
                    />
                  )}
                </TableCell>
                <TableCell
                  aria-label="Integration ID"
                  style={{
                    padding: '8px 16px',
                  }}
                >
                  <Field
                    id={`${profile.integrationIdFieldName}-input`}
                    name={profile.integrationIdFieldName}
                    component={CustomTextField}
                    disabled={shouldAutoGenerate}
                    placeholder={t(
                      'ui.integrationParameters.integrationId.placeholder',
                      'Enter Integration ID...'
                    )}
                  />
                </TableCell>
              </TableRow>
            );
          })}
        </TableBody>
      </StyledTable>
    </TableContainer>
  );
};

export default IntegrationParameters;
